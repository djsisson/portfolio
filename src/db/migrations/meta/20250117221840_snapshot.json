{
  "id": "85b0c8e8-e7e8-4777-be77-ded0912bb7d7",
  "prevId": "00000000-0000-0000-0000-000000000000",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.gamestate": {
      "name": "gamestate",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "integer",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "gamestats_id_seq",
            "schema": "public",
            "increment": "1",
            "startWith": "1",
            "minValue": "1",
            "maxValue": "2147483647",
            "cache": "1",
            "cycle": false
          }
        },
        "playername": {
          "name": "playername",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "theme": {
          "name": "theme",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "currentscore": {
          "name": "currentscore",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        },
        "totalclicks": {
          "name": "totalclicks",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        },
        "totalspent": {
          "name": "totalspent",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        },
        "currentaveragecps": {
          "name": "currentaveragecps",
          "type": "real",
          "primaryKey": false,
          "notNull": true
        },
        "averageclickvalue": {
          "name": "averageclickvalue",
          "type": "real",
          "primaryKey": false,
          "notNull": true
        },
        "researched": {
          "name": "researched",
          "type": "integer[]",
          "primaryKey": false,
          "notNull": true
        },
        "upgrades": {
          "name": "upgrades",
          "type": "json[]",
          "primaryKey": false,
          "notNull": true
        },
        "items": {
          "name": "items",
          "type": "json[]",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.items_required_items": {
      "name": "items_required_items",
      "schema": "",
      "columns": {
        "item_id": {
          "name": "item_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "required_id": {
          "name": "required_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "quantity": {
          "name": "quantity",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "items_required_items_item_id_shop_items_id_fk": {
          "name": "items_required_items_item_id_shop_items_id_fk",
          "tableFrom": "items_required_items",
          "tableTo": "shop_items",
          "columnsFrom": [
            "item_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "items_required_items_required_id_shop_items_id_fk": {
          "name": "items_required_items_required_id_shop_items_id_fk",
          "tableFrom": "items_required_items",
          "tableTo": "shop_items",
          "columnsFrom": [
            "required_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "items_required_items_item_id_required_id_pk": {
          "name": "items_required_items_item_id_required_id_pk",
          "columns": [
            "item_id",
            "required_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.items_required_research": {
      "name": "items_required_research",
      "schema": "",
      "columns": {
        "item_id": {
          "name": "item_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "required_id": {
          "name": "required_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "items_required_research_item_id_shop_items_id_fk": {
          "name": "items_required_research_item_id_shop_items_id_fk",
          "tableFrom": "items_required_research",
          "tableTo": "shop_items",
          "columnsFrom": [
            "item_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "items_required_research_required_id_research_id_fk": {
          "name": "items_required_research_required_id_research_id_fk",
          "tableFrom": "items_required_research",
          "tableTo": "research",
          "columnsFrom": [
            "required_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "items_required_research_item_id_required_id_pk": {
          "name": "items_required_research_item_id_required_id_pk",
          "columns": [
            "item_id",
            "required_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.levels": {
      "name": "levels",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "integer",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "levels_id_seq",
            "schema": "public",
            "increment": "1",
            "startWith": "1",
            "minValue": "1",
            "maxValue": "2147483647",
            "cache": "1",
            "cycle": false
          }
        },
        "level": {
          "name": "level",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "upgrade_id": {
          "name": "upgrade_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "cost": {
          "name": "cost",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "baseValue": {
          "name": "baseValue",
          "type": "real",
          "primaryKey": false,
          "notNull": true
        },
        "critChance": {
          "name": "critChance",
          "type": "real",
          "primaryKey": false,
          "notNull": true
        },
        "critDamage": {
          "name": "critDamage",
          "type": "real",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "levels_upgrade_id_upgrades_id_fk": {
          "name": "levels_upgrade_id_upgrades_id_fk",
          "tableFrom": "levels",
          "tableTo": "upgrades",
          "columnsFrom": [
            "upgrade_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.research": {
      "name": "research",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "integer",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "research_id_seq",
            "schema": "public",
            "increment": "1",
            "startWith": "1",
            "minValue": "1",
            "maxValue": "2147483647",
            "cache": "1",
            "cycle": false
          }
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "cost": {
          "name": "cost",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.research_required_items": {
      "name": "research_required_items",
      "schema": "",
      "columns": {
        "research_id": {
          "name": "research_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "item_id": {
          "name": "item_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "quantity": {
          "name": "quantity",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "research_required_items_research_id_research_id_fk": {
          "name": "research_required_items_research_id_research_id_fk",
          "tableFrom": "research_required_items",
          "tableTo": "research",
          "columnsFrom": [
            "research_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "research_required_items_item_id_shop_items_id_fk": {
          "name": "research_required_items_item_id_shop_items_id_fk",
          "tableFrom": "research_required_items",
          "tableTo": "shop_items",
          "columnsFrom": [
            "item_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "research_required_items_research_id_item_id_pk": {
          "name": "research_required_items_research_id_item_id_pk",
          "columns": [
            "research_id",
            "item_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.research_required_research": {
      "name": "research_required_research",
      "schema": "",
      "columns": {
        "research_id": {
          "name": "research_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "required_id": {
          "name": "required_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "research_required_research_research_id_research_id_fk": {
          "name": "research_required_research_research_id_research_id_fk",
          "tableFrom": "research_required_research",
          "tableTo": "research",
          "columnsFrom": [
            "research_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "research_required_research_required_id_research_id_fk": {
          "name": "research_required_research_required_id_research_id_fk",
          "tableFrom": "research_required_research",
          "tableTo": "research",
          "columnsFrom": [
            "required_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "research_required_research_research_id_required_id_pk": {
          "name": "research_required_research_research_id_required_id_pk",
          "columns": [
            "research_id",
            "required_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.shop_items": {
      "name": "shop_items",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "integer",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "shop_items_id_seq",
            "schema": "public",
            "increment": "1",
            "startWith": "1",
            "minValue": "1",
            "maxValue": "2147483647",
            "cache": "1",
            "cycle": false
          }
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "cost": {
          "name": "cost",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "maxQty": {
          "name": "maxQty",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "multiplier": {
          "name": "multiplier",
          "type": "real",
          "primaryKey": false,
          "notNull": true
        },
        "baseValue": {
          "name": "baseValue",
          "type": "real",
          "primaryKey": false,
          "notNull": true
        },
        "critChance": {
          "name": "critChance",
          "type": "real",
          "primaryKey": false,
          "notNull": true
        },
        "critDamage": {
          "name": "critDamage",
          "type": "real",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.upgrade_required_items": {
      "name": "upgrade_required_items",
      "schema": "",
      "columns": {
        "upgrade_id": {
          "name": "upgrade_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "item_id": {
          "name": "item_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "quantity": {
          "name": "quantity",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "upgrade_required_items_upgrade_id_upgrades_id_fk": {
          "name": "upgrade_required_items_upgrade_id_upgrades_id_fk",
          "tableFrom": "upgrade_required_items",
          "tableTo": "upgrades",
          "columnsFrom": [
            "upgrade_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "upgrade_required_items_item_id_shop_items_id_fk": {
          "name": "upgrade_required_items_item_id_shop_items_id_fk",
          "tableFrom": "upgrade_required_items",
          "tableTo": "shop_items",
          "columnsFrom": [
            "item_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "upgrade_required_items_upgrade_id_item_id_pk": {
          "name": "upgrade_required_items_upgrade_id_item_id_pk",
          "columns": [
            "upgrade_id",
            "item_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.upgrade_required_research": {
      "name": "upgrade_required_research",
      "schema": "",
      "columns": {
        "upgrade_id": {
          "name": "upgrade_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "required_id": {
          "name": "required_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "upgrade_required_research_upgrade_id_upgrades_id_fk": {
          "name": "upgrade_required_research_upgrade_id_upgrades_id_fk",
          "tableFrom": "upgrade_required_research",
          "tableTo": "upgrades",
          "columnsFrom": [
            "upgrade_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "upgrade_required_research_required_id_research_id_fk": {
          "name": "upgrade_required_research_required_id_research_id_fk",
          "tableFrom": "upgrade_required_research",
          "tableTo": "research",
          "columnsFrom": [
            "required_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "upgrade_required_research_upgrade_id_research_id_pk": {
          "name": "upgrade_required_research_upgrade_id_research_id_pk",
          "columns": [
            "upgrade_id",
            "required_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.upgrades": {
      "name": "upgrades",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "integer",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "upgrades_id_seq",
            "schema": "public",
            "increment": "1",
            "startWith": "1",
            "minValue": "1",
            "maxValue": "2147483647",
            "cache": "1",
            "cycle": false
          }
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "effectItemId": {
          "name": "effectItemId",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "upgrades_effectItemId_shop_items_id_fk": {
          "name": "upgrades_effectItemId_shop_items_id_fk",
          "tableFrom": "upgrades",
          "tableTo": "shop_items",
          "columnsFrom": [
            "effectItemId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.characters": {
      "name": "characters",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "integer",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "characters_id_seq",
            "schema": "public",
            "increment": "1",
            "startWith": "1",
            "minValue": "1",
            "maxValue": "2147483647",
            "cache": "1",
            "cycle": false
          }
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text[]",
          "primaryKey": false,
          "notNull": true
        },
        "element_id": {
          "name": "element_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "city_id": {
          "name": "city_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "characters_city_id_cities_id_fk": {
          "name": "characters_city_id_cities_id_fk",
          "columns": [
            {
              "expression": "city_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "characters_element_id_elements_id_fk": {
          "name": "characters_element_id_elements_id_fk",
          "columns": [
            {
              "expression": "element_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "characters_element_id_elements_id_fk": {
          "name": "characters_element_id_elements_id_fk",
          "tableFrom": "characters",
          "tableTo": "elements",
          "columnsFrom": [
            "element_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "characters_city_id_cities_id_fk": {
          "name": "characters_city_id_cities_id_fk",
          "tableFrom": "characters",
          "tableTo": "cities",
          "columnsFrom": [
            "city_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "characters_name_unique": {
          "name": "characters_name_unique",
          "nullsNotDistinct": false,
          "columns": [
            "name"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.cities": {
      "name": "cities",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "integer",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "cities_id_seq",
            "schema": "public",
            "increment": "1",
            "startWith": "1",
            "minValue": "1",
            "maxValue": "2147483647",
            "cache": "1",
            "cycle": false
          }
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "cities_name_unique": {
          "name": "cities_name_unique",
          "nullsNotDistinct": false,
          "columns": [
            "name"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.elements": {
      "name": "elements",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "integer",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "elements_id_seq",
            "schema": "public",
            "increment": "1",
            "startWith": "1",
            "minValue": "1",
            "maxValue": "2147483647",
            "cache": "1",
            "cycle": false
          }
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "colour": {
          "name": "colour",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "elements_name_unique": {
          "name": "elements_name_unique",
          "nullsNotDistinct": false,
          "columns": [
            "name"
          ]
        },
        "elements_colour_unique": {
          "name": "elements_colour_unique",
          "nullsNotDistinct": false,
          "columns": [
            "colour"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.todos": {
      "name": "todos",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "completed": {
          "name": "completed",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "todos_user_id_idx": {
          "name": "todos_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "todos_user_id_users_id_fk": {
          "name": "todos_user_id_users_id_fk",
          "tableFrom": "todos",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "todos_delete_policy": {
          "name": "todos_delete_policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "\"todos\".\"user_id\" = (select auth.uid())"
        },
        "todos_insert_policy": {
          "name": "todos_insert_policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "\"todos\".\"user_id\" = (select auth.uid())"
        },
        "todos_select_policy": {
          "name": "todos_select_policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "\"todos\".\"user_id\" = (select auth.uid())"
        },
        "todos_update_policy": {
          "name": "todos_update_policy",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "\"todos\".\"user_id\" = (select auth.uid())",
          "withCheck": "\"todos\".\"user_id\" = (select auth.uid())"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.tilez_games": {
      "name": "tilez_games",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "game_id": {
          "name": "game_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "game_start": {
          "name": "game_start",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "game_end": {
          "name": "game_end",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "num_moves": {
          "name": "num_moves",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "completed": {
          "name": "completed",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        }
      },
      "indexes": {
        "tilez_game_id_idx": {
          "name": "tilez_game_id_idx",
          "columns": [
            {
              "expression": "game_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "tilez_game_user_id_idx": {
          "name": "tilez_game_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "tilez_games_user_id_users_id_fk": {
          "name": "tilez_games_user_id_users_id_fk",
          "tableFrom": "tilez_games",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "tilez_delete_policy": {
          "name": "tilez_delete_policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "\"tilez_games\".\"user_id\" = (select auth.uid())"
        },
        "tilez_insert_policy": {
          "name": "tilez_insert_policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "\"tilez_games\".\"user_id\" = (select auth.uid())"
        },
        "tilez_select_policy": {
          "name": "tilez_select_policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "\"tilez_games\".\"user_id\" = (select auth.uid())"
        },
        "tilez_update_policy": {
          "name": "tilez_update_policy",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "\"tilez_games\".\"user_id\" = (select auth.uid())",
          "withCheck": "\"tilez_games\".\"user_id\" = (select auth.uid())"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.tilez_words": {
      "name": "tilez_words",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "word": {
          "name": "word",
          "type": "char(6)",
          "primaryKey": false,
          "notNull": true
        },
        "definition": {
          "name": "definition",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "last_checked": {
          "name": "last_checked",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "tilez_word_word_idx": {
          "name": "tilez_word_word_idx",
          "columns": [
            {
              "expression": "word",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "tilez_delete_word_policy": {
          "name": "tilez_delete_word_policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "postgres_role"
          ]
        },
        "tilez_insert_word_policy": {
          "name": "tilez_insert_word_policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "postgres_role"
          ]
        },
        "tilez_select_word_policy": {
          "name": "tilez_select_word_policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "postgres_role"
          ]
        },
        "tilez_update_word_policy": {
          "name": "tilez_update_word_policy",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "postgres_role"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.hashtag_messages": {
      "name": "hashtag_messages",
      "schema": "",
      "columns": {
        "hashtag_id": {
          "name": "hashtag_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "message_id": {
          "name": "message_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "hashtag_messages_hashtag_id_idx": {
          "name": "hashtag_messages_hashtag_id_idx",
          "columns": [
            {
              "expression": "hashtag_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "hashtag_messages_message_id_idx": {
          "name": "hashtag_messages_message_id_idx",
          "columns": [
            {
              "expression": "message_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "hashtag_messages_hashtag_id_hashtags_id_fk": {
          "name": "hashtag_messages_hashtag_id_hashtags_id_fk",
          "tableFrom": "hashtag_messages",
          "tableTo": "hashtags",
          "columnsFrom": [
            "hashtag_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "hashtag_messages_message_id_messages_id_fk": {
          "name": "hashtag_messages_message_id_messages_id_fk",
          "tableFrom": "hashtag_messages",
          "tableTo": "messages",
          "columnsFrom": [
            "message_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {
        "hashtag_messages_pk": {
          "name": "hashtag_messages_pk",
          "columns": [
            "hashtag_id",
            "message_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {
        "hashtag_messages_delete_policy": {
          "name": "hashtag_messages_delete_policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "postgres_role"
          ],
          "using": "true"
        },
        "hashtag_messages_insert_policy": {
          "name": "hashtag_messages_insert_policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "postgres_role"
          ],
          "withCheck": "true"
        },
        "hashtag_messages_select_policy": {
          "name": "hashtag_messages_select_policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "anon"
          ],
          "using": "true"
        },
        "hashtag_messages_update_policy": {
          "name": "hashtag_messages_update_policy",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "postgres_role"
          ],
          "using": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.hashtags": {
      "name": "hashtags",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "hashtag": {
          "name": "hashtag",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "hashtags_hashtag_idx": {
          "name": "hashtags_hashtag_idx",
          "columns": [
            {
              "expression": "hashtag",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "hashtags_delete_policy": {
          "name": "hashtags_delete_policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "postgres_role"
          ],
          "using": "true"
        },
        "hashtags_insert_policy": {
          "name": "hashtags_insert_policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "postgres_role"
          ],
          "withCheck": "true"
        },
        "hashtags_select_policy": {
          "name": "hashtags_select_policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "anon"
          ],
          "using": "true"
        },
        "hashtags_update_policy": {
          "name": "hashtags_update_policy",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "postgres_role"
          ],
          "using": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.likes": {
      "name": "likes",
      "schema": "",
      "columns": {
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "message_id": {
          "name": "message_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "like": {
          "name": "like",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        }
      },
      "indexes": {},
      "foreignKeys": {
        "likes_user_id_users_id_fk": {
          "name": "likes_user_id_users_id_fk",
          "tableFrom": "likes",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "likes_message_id_messages_id_fk": {
          "name": "likes_message_id_messages_id_fk",
          "tableFrom": "likes",
          "tableTo": "messages",
          "columnsFrom": [
            "message_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {
        "likes_pk": {
          "name": "likes_pk",
          "columns": [
            "user_id",
            "message_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {
        "likes_delete_policy": {
          "name": "likes_delete_policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "(user_id IN ( SELECT users.id FROM users WHERE (users.user_id = ( SELECT auth.uid() AS uid))))"
        },
        "likes_insert_policy": {
          "name": "likes_insert_policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "(user_id IN ( SELECT users.id FROM users WHERE (users.user_id = ( SELECT auth.uid() AS uid))))"
        },
        "likes_select_policy": {
          "name": "likes_select_policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "anon"
          ],
          "using": "true"
        },
        "likes_update_policy": {
          "name": "likes_update_policy",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "(user_id IN ( SELECT users.id FROM users WHERE (users.user_id = ( SELECT auth.uid() AS uid))))",
          "withCheck": "(user_id IN ( SELECT users.id FROM users WHERE (users.user_id = ( SELECT auth.uid() AS uid))))"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.messages": {
      "name": "messages",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "parent_id": {
          "name": "parent_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "message": {
          "name": "message",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "messages_user_id_idx": {
          "name": "messages_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "messages_parent_id_idx": {
          "name": "messages_parent_id_idx",
          "columns": [
            {
              "expression": "parent_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "messages_user_id_users_id_fk": {
          "name": "messages_user_id_users_id_fk",
          "tableFrom": "messages",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "messages_parent_id_messages_id_fk": {
          "name": "messages_parent_id_messages_id_fk",
          "tableFrom": "messages",
          "tableTo": "messages",
          "columnsFrom": [
            "parent_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "messages_delete_policy": {
          "name": "messages_delete_policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "\"messages\".\"user_id\" = (select auth.uid())"
        },
        "messages_insert_policy": {
          "name": "messages_insert_policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "\"messages\".\"user_id\" = (select auth.uid())"
        },
        "messages_select_policy": {
          "name": "messages_select_policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "anon"
          ],
          "using": "true"
        },
        "messages_update_policy": {
          "name": "messages_update_policy",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "\"messages\".\"user_id\" = (select auth.uid())",
          "withCheck": "\"messages\".\"user_id\" = (select auth.uid())"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.user_follows": {
      "name": "user_follows",
      "schema": "",
      "columns": {
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "following_user_id": {
          "name": "following_user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "user_follows_user_id_idx": {
          "name": "user_follows_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "user_follows_following_user_id_idx": {
          "name": "user_follows_following_user_id_idx",
          "columns": [
            {
              "expression": "following_user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "user_follows_user_id_users_id_fk": {
          "name": "user_follows_user_id_users_id_fk",
          "tableFrom": "user_follows",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "user_follows_following_user_id_users_id_fk": {
          "name": "user_follows_following_user_id_users_id_fk",
          "tableFrom": "user_follows",
          "tableTo": "users",
          "columnsFrom": [
            "following_user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {
        "user_follows_pk": {
          "name": "user_follows_pk",
          "columns": [
            "user_id",
            "following_user_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {
        "user_follows_delete_policy": {
          "name": "user_follows_delete_policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "(user_id IN ( SELECT users.id FROM users WHERE (users.user_id = ( SELECT auth.uid() AS uid))))"
        },
        "user_follows_insert_policy": {
          "name": "user_follows_insert_policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "(user_id IN ( SELECT users.id FROM users WHERE (users.user_id = ( SELECT auth.uid() AS uid))))"
        },
        "user_follows_select_policy": {
          "name": "user_follows_select_policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "anon"
          ],
          "using": "true"
        },
        "user_follows_update_policy": {
          "name": "user_follows_update_policy",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "(user_id IN ( SELECT users.id FROM users WHERE (users.user_id = ( SELECT auth.uid() AS uid))))",
          "withCheck": "(user_id IN ( SELECT users.id FROM users WHERE (users.user_id = ( SELECT auth.uid() AS uid))))"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.users": {
      "name": "users",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "username": {
          "name": "username",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "bio": {
          "name": "bio",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "avatar": {
          "name": "avatar",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "users_username_idx": {
          "name": "users_username_idx",
          "columns": [
            {
              "expression": "username",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "users_email_idx": {
          "name": "users_email_idx",
          "columns": [
            {
              "expression": "email",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "users_user_id_idx": {
          "name": "users_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "users_user_id_users_id_fk": {
          "name": "users_user_id_users_id_fk",
          "tableFrom": "users",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "users_delete_policy": {
          "name": "users_delete_policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "\"users\".\"user_id\" = (select auth.uid())"
        },
        "users_insert_policy": {
          "name": "users_insert_policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "\"users\".\"user_id\" = (select auth.uid())"
        },
        "users_select_policy": {
          "name": "users_select_policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "anon"
          ],
          "using": "true"
        },
        "users_update_policy": {
          "name": "users_update_policy",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "\"users\".\"user_id\" = (select auth.uid())",
          "withCheck": "\"users\".\"user_id\" = (select auth.uid())"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {},
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}